#pragma once
#include "afxwin.h"
#include "Formula.h"

/**
 * @class CTupleDlg
 * @brief Класс диалога для обработки выбора и отображения кортежей.
 *
 * Этот диалог позволяет пользователю выбирать значения для кортежей и управлять соответствующими сущностями. Он включает в себя комбобоксы для выбора кортежей и элементы управления для отображения и изменения значений.
 */
class CTupleDlg : public CDialog
{
	/**
	 * @var all_entities
	 * @brief Указатель на вектор указателей на объекты EntityBase.
	 * Сохраняет все сущности, связанные с диалогом для выбора кортежей.
	 */
	vector <EntityBase *>  *all_entities;

	DECLARE_DYNAMIC(CTupleDlg)

	/**
	 * @brief Инициализирует диалог.
	 * Эта функция вызывается при первом создании диалога и отвечает за настройку необходимых данных.
	 * @return BOOL Возвращает TRUE, если диалог был успешно инициализирован.
	 */
	BOOL OnInitDialog();

public:
	/**
	 * @brief Конструктор по умолчанию для класса CTupleDlg.
	 * Инициализирует диалог без данных.
	 * @param pParent Указатель на родительское окно, по умолчанию NULL.
	 */
	CTupleDlg(CWnd* pParent = NULL);

	/**
	 * @brief Деструктор для класса CTupleDlg.
	 * Освобождает любые ресурсы, использованные диалогом.
	 */
	virtual ~CTupleDlg();

	/**
	 * @enum IDD
	 * @brief Идентификатор ресурса для этого диалога.
	 */
	enum { IDD = IDD_TUPLEDIALOG };

protected:
	/**
	 * @brief Обрабатывает обмен данными между элементами управления и переменными.
	 * Эта функция обеспечивает правильный перенос данных, введенных в элементы управления, в переменные класса.
	 * @param pDX Указатель на объект CDataExchange, используемый для обмена данными.
	 */
	virtual void DoDataExchange(CDataExchange* pDX);

	/**
	 * @brief Карта сообщений для обработки сообщений диалога.
	 */
	DECLARE_MESSAGE_MAP()

public:
	/**
	 * @var combo1
	 * @brief Комбобокс для выбора первого значения кортежа.
	 */
	CComboBox combo1;

	/**
	 * @var combo2
	 * @brief Комбобокс для выбора второго значения кортежа.
	 */
	CComboBox combo2;

	/**
	 * @brief Обрабатывает событие нажатия кнопки "OK".
	 * Эта функция вызывается, когда пользователь нажимает кнопку "OK" в диалоге.
	 */
	afx_msg void OnBnClickedOk();

	/**
	 * @var combo3
	 * @brief Комбобокс для выбора третьего значения кортежа.
	 */
	CComboBox combo3;

	/**
	 * @var m_lowindex1
	 * @brief Элемент управления для ввода первого значения индекса.
	 */
	CEdit m_lowindex1;

	/**
	 * @var m_lowindex2
	 * @brief Элемент управления для ввода второго значения индекса.
	 */
	CEdit m_lowindex2;

	/**
	 * @var m_lowindex3
	 * @brief Элемент управления для ввода третьего значения индекса.
	 */
	CEdit m_lowindex3;

	/**
	 * @brief Устанавливает вектор сущностей для диалога.
	 * Эта функция устанавливает указатель на список сущностей, которые будут использоваться в диалоге.
	 * @param ent Указатель на вектор объектов EntityBase.
	 */
	void SetEntities(vector <EntityBase *> *ent) {all_entities = ent; };
};