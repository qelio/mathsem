/**
 * @class Sphere
 * @brief Этот класс представляет собой сферу с позицией и радиусом.
 *
 * Класс предоставляет методы для расчета объема и площади поверхности сферы, а также для отображения
 * и изменения размера сферы в графическом контексте с использованием OpenGL.
 */
class Sphere
{
public:
	/**
	 * @brief Конструктор по умолчанию для класса Sphere.
	 * Инициализирует позицию (x, y, z) и радиус (r) сферы значениями по умолчанию.
	 */
	Sphere(void);

	/**
	 * @brief Деструктор для класса Sphere.
	 * Освобождает любые ресурсы, использованные объектом Sphere.
	 */
	~Sphere(void);

	/**
	 * @var x, y, z
	 * @brief Координаты центра сферы.
	 */
	double x, y, z;

	/**
	 * @var r
	 * @brief Радиус сферы.
	 */
	double r;

	/**
	 * @brief Параметризированный конструктор для класса Sphere.
	 * Инициализирует сферу с заданными координатами центра (x, y, z) и радиусом (r).
	 * @param xc Координата x центра сферы.
	 * @param yc Координата y центра сферы.
	 * @param zc Координата z центра сферы.
	 * @param rc Радиус сферы.
	 */
	Sphere (double xc, double yc, double zc, double rc)
	{ x=xc; y=yc; z=zc; r=rc; }

	/**
	 * @brief Вычисляет объем сферы.
	 * Используемая формула: V = (4/3) * π * r^3.
	 * @return Объем сферы.
	 */
	double ob()
	{
		return r*r*r*4*M_PI/3;
	}

	/**
	 * @brief Вычисляет площадь поверхности сферы.
	 * Используемая формула: A = 4 * π * r^2.
	 * @return Площадь поверхности сферы.
	 */
	double pov()
	{
		return r*r*4*M_PI;
	}

	/**
	 * @brief Изменяет размер окна OpenGL при изменении размера окна.
	 * @param width Новая ширина окна.
	 * @param height Новая высота окна.
	 */
	void CALLBACK resize(int width,int height);

	/**
	 * @brief Отображает сферу в контексте OpenGL.
	 * Эта функция вызывается для рендеринга сферы с использованием функций рисования OpenGL.
	 */
	void CALLBACK display(void);
};